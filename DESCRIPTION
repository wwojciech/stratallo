Package: stratallo
Title: Optimum Sample Allocation in Stratified Sampling
Version: 2.2.1
Authors@R: c(
  person("Wojciech", "Wójciak", email = "wojciech.wojciak@gmail.com", role = c("aut", "cre")),
  person("Jacek", "Wesołowski", email = "jacek.wesolowski@pw.edu.pl", role = "sad"),
  person("Robert", "Wieczorkowski", email = "R.Wieczorkowski@stat.gov.pl", role = "ctb"))
Description: Functions in this package provide solution to classical problem in
  survey methodology - an optimum sample allocation in stratified sampling. In
  this context, the optimal allocation is in the classical Tchuprov-Neyman's
  sense and it satisfies additional lower or upper bounds restrictions imposed
  on sample sizes in strata. There are few different algorithms available to
  use, and one them is based on popular sample allocation method that applies
  Neyman allocation to recursively reduced set of strata.
  This package also provides the function that computes a solution to the
  minimum cost allocation problem, which is a minor modification of the
  classical optimium sample allocation. This problem lies in the determination
  of a vector of strata sample sizes that minimizes total cost of the survey,
  under assumed fixed level of the stratified estimator's variance. As in the
  case of the classical optimal allocation, the problem of minimum cost
  allocation can be complemented by imposing upper-bounds constraints on sample
  sizes in strata.
License: GPL-2
URL: https://github.com/wwojciech/stratallo
BugReports: https://github.com/wwojciech/stratallo/issues
Copyright: Wojciech Wójciak
Language: en-US
Encoding: UTF-8
LazyData: true
Imports:
    checkmate,
    lifecycle
Roxygen: list(markdown = TRUE)
RoxygenNote: 7.2.3
Suggests: 
    rmarkdown,
    knitr,
    spelling,
    testthat (>= 3.0.0)
Config/testthat/edition: 3
Collate: 
    'helpers.R'
    'algorithms_1sided.R'
    'algorithms_2sided.R'
    'algorithms_of_other_authors.R'
    'data.R'
    'opt.R'
    'stratallo-package.R'
VignetteBuilder: knitr
Depends: 
    R (>= 2.10)
